[
    {
        "id": 1,
        "titulo": "Python: Origem do nome",
        "texto": "> Fonte: <https://www.alura.com.br/artigos/python-origem-do-nome> \n\n Por que uma das linguagens de programação mais amada no mundo tem esse nome e qual a origem dele? Tem relação com algum tipo de cobra? Descubra isso e muito mais neste artigo! \n\n ### Um pouco de história \n\n [Guido Van Rossum](https://pt.wikipedia.org/wiki/Guido_van_Rossum) criou o "
    },
    {
        "id": 2,
        "titulo": "O que é Node?",
        "texto": "> Fonte: <https://www.alura.com.br/artigos/node-js-definicao-caracteristicas-vantagens-usos> \n\n  ### Introdução \n\n Node.JS é uma ferramenta amplamente utilizada no universo de desenvolvimento e todos que atuam na área de tecnologia já ouviram falar, nem que seja nos milhares de anúncios de cursos ou mesmo de vagas. Mas você se pergunta: afinal, o que é Node.js? Para que serve? Como ele atua \n\n \n\n Calma que, antes de olhar para o ambiente Node.JS, precisamos entender um pouco sobre o que é o JavaScript e como ele funciona. Vamos lá! \n\n \n\n ### Node.JS e JavaScript \n\n \n\n JavaScript é uma linguagem de programação que originalmente foi desenvolvida para trazer maior i"
    },
    {
        "id": 3,
        "titulo": "O que é JWT?",
        "texto": "> Fonte: <https://www.alura.com.br/artigos/o-que-e-json-web-tokens> \n\n  Você já foi em algum evento que precisou apresentar um **documento de identificação** para comprovar que você era realmente a pessoa que comprou o ingresso? O ato de solicitar o documento de identificação é uma forma de **autenticação** para que você receba a **autorização** para entrar. Na web, esse processo funciona de forma parecida. Para fazer requisições de alguns serviços ou acessar páginas específicas, você precisa se identificar de alguma forma, e essa identificação precisa ser segura e única.  \n\n Neste artigo você vai compreender o que é o padrão JWT (sigla para “JSON Web Tokens”) para autenticação, muito usado na web. Também veremos: \n\n  \n\n - O que é um token; \n\n - Para que serve e quando usar um JWT; \n\n - Como criar e verificar seu JWT token. \n\n  \n\n ### O que é um token? \n\n  \n\n Atualmente, ouvimos muito a palavra token relacionada a NFTs (sigla para “Tokens não fundíveis” em português), metaverso, criptomoedas, etc. Porém, fora desse meio, um token é uma **assinatura digital**, **uma chave**.  \n\n  \n\n Quando você abre uma conta em um banco, você precisa definir uma senha e seus dados pessoais. Esses dados são convertidos em uma assinatura digital que vai identificar você de **forma única** para aquele banco e, toda vez que você acessar seu banco e entrar com sua senha e um dado pessoal, o banco entenderá e **confirmará** que você é aquele usuário logado, semelhante a entrarmos no evento quando apresentamos nosso documento de identidade. \n\n"
    },
    {
        "id": 4,
        "titulo": "O que é um Sprite 2D?",
        "texto": "> Fonte: <https://www.alura.com.br/artigos/sprite-como-funciona-em-jogos-2d> \n\n  ## O que é um sprite? \n\n É bem comum em jogos vermos vários personagens, movimento de objetos, mapas desenhados ao fundo e muita coisa acontecendo. Todos estes elementos também são conhecidos como **sprite**. Neste artigo, vamos focar nos sprites 2D e como são feitas as animações. "
    },
    {
        "id": 5,
        "titulo": "Variáveis no CSS",
        "texto": "> Fonte: <https://www.alura.com.br/artigos/construa-css-magico-variaveis-nativas> \n\n  Provavelmente, ao construir um website, você já deve ter reparado que muitos dos valores nos arquivos CSS são dados que se repetem constantemente, não é mesmo? Por exemplo, a paleta de cores que mantém o padrão visual da página é reutilizada em inúmeros pontos do código. Sendo assim, fazer a manutenção do projeto e alterar esses valores manualmente pode se tornar uma tarefa trabalhosa e passiva de erros, ainda mais em aplicações de grande escala.  \n\n Mas então, como podemos melhorar essa situação? \n\n Uma boa alternativa é utilizar as **Variáveis no CSS** como aliadas!  \n\n Se você ficou interessado e deseja descobrir como fazer isso, vem comigo que nesse artigo eu te ensinarei mais sobre esse assunto detalhadamente. \n\n ## Mas primeiro, o que são Variáveis de CSS? \n\n As variáveis de CSS, que também são chamadas de propriedades customizadas, trazem grandes benefícios e vão funcionar de forma bem semelhante às variáveis de linguagens de programação, ou seja, sua maior função é armazenar valores que serão utilizados posteriormente no código."
    },
    {
        "id": 6,
        "titulo": "Principais comunidades de Front-end",
        "texto": "> Fonte: <https://www.alura.com.br/artigos/principais-comunidades-front-end> \n\n  Quando entramos na área da tecnologia é como se estivéssemos descobrindo um mundo completamente novo. E, nessa caminhada, você pode se sentir só e sem rumo. Então, para lhe mostrar que não tem apenas você nessa jornada, vou trazer nesse artigo algumas comunidades de [front-end](https://www.alura.com.br/artigos/o-que-e-front-end-e-back-end) para que possa conhecer e fazer parte. \n\n ## O que é uma comunidade?\n\n Comunidade é um grupo de pessoas que se reúnem para trocar ideias, dividir experiências e criar eventos (como palestras e workshops, que podem ser presenciais ou on-line). Nesses grupos, diversos temas são debatidos, principalmente sobre as principais demandas do mercado e as tendências da atualidade. \n\n Esses espaços são conhecidos por oferecerem bastante suporte, o que é incrível para quem está começando agora na carreira de dev. Neles, você encontrará desde as pessoas iniciantes até as mais experientes e todas estão dispostas a ajudar com qualquer dúvida. O fato é que uma pessoa antes de você já pode ter tido perguntas semelhantes às suas e, nesses grupos, você pode encontrar a solução rapidamente.\n\n Além disso, você pode se manter informado sobre as boas práticas, novidades, receber feedbacks, conhecer pessoas novas e se conectar com elas. Aliás, fazer networking é importante em qualquer área, pois, ao se conectar com diferentes tipos de pessoas, você não cresce apenas profissionalmente, mas como indivíduo também."
    },
    {
        "id": 7,
        "titulo": "Formulários reativos com Angular",
        "texto": "> Fonte: <https://www.alura.com.br/artigos/como-aplicar-validacao-formularios-reativos-angular> \n\n  Você já deve ter preenchido um formulário que não indicava claramente o porquê de algum campo não estar válido e teve que ficar adivinhando quantos caracteres sua senha precisava ter ou que tipo de caracteres deveria receber. Ou, em um formulário longo, já ocorreu de preencher apenas os campos que achava serem requeridos e só no final, ao tentar submeter os dados, se deparou com inúmeras mensagens de erro mostrando que diversos outros campos eram obrigatórios? Chato, né? Vem aprender como melhorar essa experiência com o uso das validações customizadas do Angular!\n\nNeste artigo, você vai aprender como:\n\n\n\n- Criar um formulário reativo;\n\n- Aplicar validações padrão e criar validações customizadas;\n\n- Mostrar os erros de validação apenas quando o campo for acessado;\n\n- Habilitar o botão de submeter os dados apenas quando o formulário estiver válido.\n\n\n\nVamos lá?\n\n\n\nCriar formulários é algo muito comum na rotina de devs front-end. Tanto em formulários mais simples e, principalmente à medida que a quantidade de campos do formulário cresce, é necessário implementar validações. \n\n\n\nAs validações são importantes para prevenir erros de cadastro e garantir que as informações preenchidas estejam no formato esperado, mas é preciso deixar claro todas as particularidades dos campos a serem preenchidos, a fim de promover uma interação mais dinâmica e amigável das pessoas com nossa aplicação. \n\n\n\n## O que são formulários reativos?"
    },
    {
        "id": 8,
        "titulo": "Svelte ou React?",
        "texto": "> Fonte: <https://www.alura.com.br/artigos/svelte-versus-react-quais-diferencas> \n\n  Inegavelmente, o [React é a ferramenta que **atualmente domina o mercado front-end**](https://www.alura.com.br/formacao-react-ts), sendo a mais utilizada de acordo com a [pesquisa de 2020 do State of JS](https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/), seguida de seus concorrentes Angular e Vue.js. Essa demanda também é notável quando pesquisamos por vagas em plataformas de empregos. \n\nPorém, uma nova ferramenta vem ganhando força nos últimos anos e superou todas as outras nessa mesma pesquisa no quesito **satisfação**: o Svelte. \n\n \n\n## Mas o que é o Svelte? \n\n \n\nO [Svelte](https://svelte.dev/) é um **compilador** utilizado para construir interfaces web, assim como React, Angular e Vue.js. Ele foi criado em 2016 por Rich Harris, e vem com a proposta de ser mais performático, fácil de aprender e utilizar, possuindo uma alta curva de aprendizagem, além da sintaxe simples e intuitiva. \n\n \n\nO Svelte em si é muito leve: [4.4kB, ou 1.6 kB comprimido](https://bundlephobia.com/package/svelte@3.43.2), custando muito menos para os navegadores baixarem os arquivos. Para comparação, os pacotes [react](https://bundlephobia.com/package/react@17.0.2) e [react-dom](https://bundlephobia.com/package/react@17.0.2), juntos, somam 126kB, ou 42.2kB comprimidos. \n\n \n\n## Como funciona um compilador no front-end? \n\n \n\nO compilador do Svelte lê o código que escrevemos e o **compila** para JavaScript puro, [sem utilizar Virtual DOM](https://svelte.dev/blog/virtual-dom-is-pure-overhead). O código gerado é [extremamente performático](https://krausest.github.io/js-framework-benchmark/2022/table_chrome_99.0.4844.51.html) em relação aos seus concorrentes."
    }
]